{"Protocols/RVS_GeneralObserverSubTrackerProtocol.html#/s:19RVS_GeneralObserver0a1_bC18SubTrackerProtocolP13subscriptionsSayAA0a1_b10ObservableF0_pGvp":{"name":"subscriptions","abstract":"<p>This is where we will track our subscriptions.</p>","parent_name":"RVS_GeneralObserverSubTrackerProtocol"},"Protocols/RVS_GeneralObserverSubTrackerProtocol.html#/s:19RVS_GeneralObserver0a1_bC18SubTrackerProtocolP14unsubscribeAllSayAA0a1_b10ObservableF0_pGyF":{"name":"unsubscribeAll()","abstract":"<p>This unsubs the observer from all of its subscriptions.</p>","parent_name":"RVS_GeneralObserverSubTrackerProtocol"},"Protocols/RVS_GeneralObserverSubTrackerProtocol.html#/s:19RVS_GeneralObserver0a1_bC18SubTrackerProtocolP20internalSubscribedToyyAA0a1_b10ObservableF0_pF":{"name":"internalSubscribedTo(_:)","abstract":"<p>This is called after being subscribed to an Observable.</p>","parent_name":"RVS_GeneralObserverSubTrackerProtocol"},"Protocols/RVS_GeneralObserverSubTrackerProtocol.html#/s:19RVS_GeneralObserver0a1_bC18SubTrackerProtocolP24internalUnsubscribedFromyyAA0a1_b10ObservableF0_pF":{"name":"internalUnsubscribedFrom(_:)","abstract":"<p>This is called after being unsubscribed from an Observable.</p>","parent_name":"RVS_GeneralObserverSubTrackerProtocol"},"Protocols/RVS_GeneralObserverProtocol.html#/s:19RVS_GeneralObserver0a1_bC8ProtocolP4uuid10Foundation4UUIDVvp":{"name":"uuid","abstract":"<p>This is a unique ID for this Observer.</p>","parent_name":"RVS_GeneralObserverProtocol"},"Protocols/RVS_GeneralObserverProtocol.html#/s:19RVS_GeneralObserver0a1_bC8ProtocolP13amISubscribedySbAA0a1_b10ObservableD0_pF":{"name":"amISubscribed(_:)","abstract":"<p>This will tell us whether or not we are subscribed to the given observable.</p>","parent_name":"RVS_GeneralObserverProtocol"},"Protocols/RVS_GeneralObserverProtocol.html#/s:19RVS_GeneralObserver0a1_bC8ProtocolP15unsubscribeFromySbAA0a1_b10ObservableD0_pF":{"name":"unsubscribeFrom(_:)","abstract":"<p>This is how an observer unsubscribes itself from an Observable.</p>","parent_name":"RVS_GeneralObserverProtocol"},"Protocols/RVS_GeneralObserverProtocol.html#/s:19RVS_GeneralObserver0a1_bC8ProtocolP12subscribedToyyAA0a1_b10ObservableD0_pF":{"name":"subscribedTo(_:)","abstract":"<p>This is called after being subscribed to an Observable.</p>","parent_name":"RVS_GeneralObserverProtocol"},"Protocols/RVS_GeneralObserverProtocol.html#/s:19RVS_GeneralObserver0a1_bC8ProtocolP16unsubscribedFromyyAA0a1_b10ObservableD0_pF":{"name":"unsubscribedFrom(_:)","abstract":"<p>This is called after being unsubscribed from an Observable.</p>","parent_name":"RVS_GeneralObserverProtocol"},"Protocols/RVS_GeneralObservableProtocol.html#/s:19RVS_GeneralObserver0a1_B18ObservableProtocolP4uuid10Foundation4UUIDVvp":{"name":"uuid","abstract":"<p>This is a unique ID for this Observer.</p>","parent_name":"RVS_GeneralObservableProtocol"},"Protocols/RVS_GeneralObservableProtocol.html#/s:19RVS_GeneralObserver0a1_B18ObservableProtocolP9observersSayAA0a1_bcE0_pGvp":{"name":"observers","abstract":"<p>This is an Array of observers that subscribe to the observable instance.</p>","parent_name":"RVS_GeneralObservableProtocol"},"Protocols/RVS_GeneralObservableProtocol.html#/s:19RVS_GeneralObserver0a1_B18ObservableProtocolP9subscribeyAA0a1_bcE0_pSgAaE_pF":{"name":"subscribe(_:)","abstract":"<p>This is how an observer subscribes to an Observable.</p>","parent_name":"RVS_GeneralObservableProtocol"},"Protocols/RVS_GeneralObservableProtocol.html#/s:19RVS_GeneralObserver0a1_B18ObservableProtocolP11unsubscribeyAA0a1_bcE0_pSgAaE_pF":{"name":"unsubscribe(_:)","abstract":"<p>This is how an observer unsubscribes from an Observable.</p>","parent_name":"RVS_GeneralObservableProtocol"},"Protocols/RVS_GeneralObservableProtocol.html#/s:19RVS_GeneralObserver0a1_B18ObservableProtocolP14unsubscribeAllSayAA0a1_bcE0_pGyF":{"name":"unsubscribeAll()","abstract":"<p>Unsubscribes all currently subscribed entities.</p>","parent_name":"RVS_GeneralObservableProtocol"},"Protocols/RVS_GeneralObservableProtocol.html#/s:19RVS_GeneralObserver0a1_B18ObservableProtocolP13amISubscribedySbAA0a1_bcE0_pF":{"name":"amISubscribed(_:)","abstract":"<p>An Observer can use this to see if they are already subscribed to an Observable.</p>","parent_name":"RVS_GeneralObservableProtocol"},"Protocols/RVS_GeneralObservableProtocol.html#/s:19RVS_GeneralObserver0a1_B18ObservableProtocolP8observer_12didSubscribeyAA0a1_bcE0_p_SbtF":{"name":"observer(_:didSubscribe:)","abstract":"<p>This is method that is called when observers subscribe or unsubscribe. The default does nothing.","parent_name":"RVS_GeneralObservableProtocol"},"Protocols/RVS_GeneralObservableProtocol.html":{"name":"RVS_GeneralObservableProtocol","abstract":"<p>This protocol makes any entity observable, by giving it the infrastructure to subscribe and track observers. It&rsquo;s up to the implementor to"},"Protocols/RVS_GeneralObserverProtocol.html":{"name":"RVS_GeneralObserverProtocol","abstract":"<p>This protocol allows any entity to become an observer. The only required component is a UUID.</p>"},"Protocols/RVS_GeneralObserverSubTrackerProtocol.html":{"name":"RVS_GeneralObserverSubTrackerProtocol","abstract":"<p>This is a class protocol, so we can mutate the properties in the protocol extension, and we won&rsquo;t have the issue of unlinked references.</p>"},"Extensions/Array.html#/s:Sa19RVS_GeneralObserverAA0a1_bC8ProtocolRzlEyxSgSScip":{"name":"subscript(_:)","abstract":"<p>This allows us to treat an Array like a Dictionary.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa19RVS_GeneralObserverAA0a1_bC8ProtocolRzlEyxSg10Foundation4UUIDVcip":{"name":"subscript(_:)","abstract":"<p>This allows us to treat an Array like a Dictionary.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa19RVS_GeneralObserverAA0a1_B18ObservableProtocolRzlEyxSgSScip":{"name":"subscript(_:)","abstract":"<p>This allows us to treat an Array like a Dictionary.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa19RVS_GeneralObserverAA0a1_B18ObservableProtocolRzlEyxSg10Foundation4UUIDVcip":{"name":"subscript(_:)","abstract":"<p>This allows us to treat an Array like a Dictionary.</p>","parent_name":"Array"},"Extensions/Array.html":{"name":"Array","abstract":"<p>This allows us to extract elements from an Array in a fashion similar to a Dictionary.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}